{"ast":null,"code":"var _jsxFileName = \"/Users/yoshidakazushi/Desktop/desktop- MacBook Pro (6)/portfolio/okamotoApp/front/src/GoogleMap.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, MarkerF } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\nconst center = {\n  lat: 35.6995,\n  lng: 139.6363\n};\n// const position = {\n//     lat:  35.6995,\n//     lng: 139.644\n//   };\n\nconst mapOptions = {\n  styles: [{\n    featureType: \"all\",\n    elementType: \"labels\",\n    stylers: [{\n      visibility: \"off\"\n    }]\n  }, {\n    featureType: \"road\",\n    elementType: \"geometry\",\n    stylers: [{\n      visibility: \"simplified\"\n    }]\n  }\n  // 他のスタイル設定...\n  ]\n};\nconst getLatLng = async address => {\n  const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=AIzaSyBYvFpfWrAo1nt1h-Ojt7Tl06hnteXAgPk`);\n  const data = await response.json();\n  return data.results[0].geometry.location;\n};\nconst addresses = [\"東京都新宿区西新宿2-8-1\", \"東京都千代田区千代田1-1\", \"東京都港区芝公園4-2-8\"];\nconst MyGoogleMap = () => {\n  _s();\n  const [positions, setPositions] = useState([]);\n  useEffect(() => {\n    async function fetchCoordinates() {\n      const newPositions = await Promise.all(addresses.map(async address => {\n        return await getLatLng(address);\n      }));\n      setPositions(newPositions);\n    }\n    fetchCoordinates();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 15,\n        options: mapOptions,\n        children: positions.map((position, index) => /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: position\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(MyGoogleMap, \"3LkfiWGtBEM8hKuM1fZoE6OzM7U=\");\n_c = MyGoogleMap;\nexport default MyGoogleMap;\nvar _c;\n$RefreshReg$(_c, \"MyGoogleMap\");","map":{"version":3,"names":["useState","useEffect","GoogleMap","LoadScript","MarkerF","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","mapOptions","styles","featureType","elementType","stylers","visibility","getLatLng","address","response","fetch","encodeURIComponent","data","json","results","geometry","location","addresses","MyGoogleMap","_s","positions","setPositions","fetchCoordinates","newPositions","Promise","all","map","children","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","mapContainerStyle","zoom","options","position","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoshidakazushi/Desktop/desktop- MacBook Pro (6)/portfolio/okamotoApp/front/src/GoogleMap.tsx"],"sourcesContent":["\n\n// import React from 'react';\nimport { useState ,useEffect} from 'react';\nimport { GoogleMap, LoadScript,MarkerF } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '100%',\n    height: '600px'\n    \n};\n\nconst center = {\n  lat: 35.6995,\n  lng: 139.6363\n};\n// const position = {\n//     lat:  35.6995,\n//     lng: 139.644\n//   };\n\nconst mapOptions = {\n    styles: [\n      {\n        featureType: \"all\",\n        elementType: \"labels\",\n        stylers: [{ visibility: \"off\" }]\n      },\n      {\n        featureType: \"road\",\n        elementType: \"geometry\",\n        stylers: [{ visibility: \"simplified\" }]\n      },\n      // 他のスタイル設定...\n    ]\n  };\n  const getLatLng = async (address: string): Promise<google.maps.LatLngLiteral> => {\n    const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=AIzaSyBYvFpfWrAo1nt1h-Ojt7Tl06hnteXAgPk`);\n    const data = await response.json();\n    return data.results[0].geometry.location;\n  }\n  const addresses = [\n    \"東京都新宿区西新宿2-8-1\",\n    \"東京都千代田区千代田1-1\",\n    \"東京都港区芝公園4-2-8\"\n  ];\nconst MyGoogleMap = () => {\n    const [positions, setPositions] = useState<google.maps.LatLngLiteral[]>([]);\n\n    useEffect(() => {\n      async function fetchCoordinates() {\n        const newPositions = await Promise.all(addresses.map(async address => {\n          return await getLatLng(address);\n        }));\n        setPositions(newPositions);\n      }\n  \n      fetchCoordinates();\n    }, []);\n  return (\n    <>\n    <LoadScript\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY!}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={15}\n        options={mapOptions}\n      >\n      {positions.map((position, index) => (\n          <MarkerF key={index} position={position} />\n        ))}\n \n        {/* ここにマップ上に配置する他の要素を追加できる */}\n      </GoogleMap>\n    </LoadScript>\n    </>\n  );\n}\n\nexport default MyGoogleMap;\n"],"mappings":";;AAEA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,SAASC,SAAS,EAAEC,UAAU,EAACC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AAEZ,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AACD;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG;EACfC,MAAM,EAAE,CACN;IACEC,WAAW,EAAE,KAAK;IAClBC,WAAW,EAAE,QAAQ;IACrBC,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAM,CAAC;EACjC,CAAC,EACD;IACEH,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,UAAU;IACvBC,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAa,CAAC;EACxC;EACA;EAAA;AAEJ,CAAC;AACD,MAAMC,SAAS,GAAG,MAAOC,OAAe,IAAyC;EAC/E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6DAA4DC,kBAAkB,CAACH,OAAO,CAAE,8CAA6C,CAAC;EACpK,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ;AAC1C,CAAC;AACD,MAAMC,SAAS,GAAG,CAChB,gBAAgB,EAChB,eAAe,EACf,eAAe,CAChB;AACH,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAA8B,EAAE,CAAC;EAE3EC,SAAS,CAAC,MAAM;IACd,eAAemC,gBAAgBA,CAAA,EAAG;MAChC,MAAMC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACR,SAAS,CAACS,GAAG,CAAC,MAAMlB,OAAO,IAAI;QACpE,OAAO,MAAMD,SAAS,CAACC,OAAO,CAAC;MACjC,CAAC,CAAC,CAAC;MACHa,YAAY,CAACE,YAAY,CAAC;IAC5B;IAEAD,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACR,oBACE9B,OAAA,CAAAE,SAAA;IAAAiC,QAAA,eACAnC,OAAA,CAACH,UAAU;MACPuC,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,wBAA0B;MAAAJ,QAAA,eAC1DnC,OAAA,CAACJ,SAAS;QACR4C,iBAAiB,EAAErC,cAAe;QAClCG,MAAM,EAAEA,MAAO;QACfmC,IAAI,EAAE,EAAG;QACTC,OAAO,EAAEjC,UAAW;QAAA0B,QAAA,EAErBP,SAAS,CAACM,GAAG,CAAC,CAACS,QAAQ,EAAEC,KAAK,kBAC3B5C,OAAA,CAACF,OAAO;UAAa6C,QAAQ,EAAEA;QAAS,GAA1BC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACX,CAAC;AAEP,CAAC;AAAArB,EAAA,CAhCKD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}